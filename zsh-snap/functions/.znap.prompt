#!/bin/zsh
# instant prompt from repo
# args: [ <repo> ] <theme>
zmodload -F zsh/parameter p:functions
zmodload -F zsh/zleparameter p:widgets
autoload -Uz add-zsh-hook add-zle-hook-widget promptinit

.znap.prompt() {
  if (( # )); then
    private repo=~znap/$1
    [[ $1 == */* ]] &&
        repo=~[$1]
    private theme=${2:-${${repo##*/((oh-my-|)zsh-|)}%%((-zsh|)-(prompt|theme)|.zsh)}}
    if ! .znap.prompt.load $repo $theme; then
      print -u2 'znap prompt: no such theme:' $@
      return $(( sysexits[(i)NOINPUT] + 63 ))
    fi
  fi

  ..znap.tput civis # Make cursor invisible.
  ..znap.tput sc    # Save cursor position.
  add-zsh-hook precmd .znap.prompt.precmd

  promptinit
  if [[ -n $theme ]]; then
    prompt_themes+=( $theme )
    prompt $theme
    ..znap.tput sc  # Save cursor position (overwriting the previous save).

    private precmd=prompt_${theme}_precmd
    if [[ -n $functions[$precmd] ]]; then
      $precmd

      # Ensure $precmd doesn't get called twice before the first prompt.
      functions[:znap:$precmd]=$functions[$precmd]
      eval "$precmd() {
        functions[$precmd]=\$functions[:znap:$precmd]
        unfunction :znap:$precmd
      }"
    fi
  fi

  setopt NO_promptsp
  [[ -o promptcr ]] &&
      print -n $'\r'
  :
  print -nPr -- "$PS1"
  ..znap.tput cnorm # Make cursor normal (visible).

  # Temporarily redirect standard error to file.
  mkdir -pm 0700 ~XDG_DATA_HOME/zsh-snap/err
  typeset -gH _znap_prompt_fd= _znap_prompt_tmp==( <<< '' )
  exec {_znap_prompt_fd}>&2  # Save a copy of std err.
  exec 2> $_znap_prompt_tmp  # Redirect std err to tmp file.
}

.znap.prompt.precmd() {
  add-zsh-hook -d precmd ${(%):-%N}

  ..znap.tput civis # Make cursor invisible.
  ..znap.tput rc    # Restore saved cursor position.

  # If there are error messages, print them above the new prompt.
  exec 2>&$_znap_prompt_fd   # Restore std error.
  private err="$( < $_znap_prompt_tmp )"
  [[ -n $err ]] &&
      print -u2 -- "$err"
  unset _znap_prompt_fd _znap_prompt_tmp

  # Workaround for https://www.zsh.org/mla/workers/2021/msg01310.html
  if zstyle -L zle-hook types > /dev/null; then
    private hook=
    for hook in isearch-{exit,update} line-{pre-redraw,init,finish} history-line-set keymap-select
    do
      [[ $widgets[zle-$hook] == user:_zsh_highlight_widget_orig-s<->.<->-r<->-zle-$hook ]] &&
          zle -N zle-$hook azhw:zle-$hook
    done
  fi

  add-zle-hook-widget line-init .znap.prompt.line-init

  return 0
}

.znap.prompt.line-init() {
  add-zle-hook-widget -d line-init ${(%):-%N}

  ..znap.tput cnorm # Make cursor normal (visible).
  [[ -v prompt_opts ]] ||
      setopt promptsp

  return 0
}

.znap.prompt "$@"
