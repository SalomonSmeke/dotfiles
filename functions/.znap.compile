#!/bin/zsh
# compile zsh scripts and functions
# args: [ ( <dir> | <file> ) ... ]
emulate -L zsh; setopt $_znap_opts
zmodload -F zsh/files b:zf_rm

private -aU dirs=() files=()
private func= opt=
if (( $# )); then
  files=( $^@(N-.) ) dirs=( $^@(N-/) )
  files+=( $^dirs/**?.zsh[^.]#~(|*/).*/*~*/test*/*(D-.) )
  local -a bugs=( $^dirs/**?.zwc.zwc )
  (( $#bugs[@] )) &&
      zf_rm -- $bugs[@]
else
  files=( ${(@vu)functions_source} )
fi
files=( ${(@n)files} )

local -i ret=0
while (( $#files[@] )); do
  {
    if ! [[ -w $files[1]:h ]]; then
      print -Pru2 -- "${(D)files[1]:h} %F{red}not writable%f"
      files=( ${files:#${files[1]:h}/[^/]##} )
      continue
    fi

    if [[ $files[1].zwc -ot $files[1] ]]; then
      if ! zf_rm -f -- $files[1].zwc; then
        print -Pru2 -- "${(D)files[1]}.zwc %F{red}not writable%f"
        continue
      fi
    fi

    if ! [[ -r $files[1] ]]; then
      print -Pru2 -- "${(D)files[1]} %F{red}not readable%f"
      continue
    fi

    if ! [[ -e $files[1].zwc ]]; then
      func=${(k)functions_source[(r)$files[1]:a]}
      if [[ -n $func && $func == $files[1]:t ]]; then
        opt=zM
      else
        opt=R
      fi

      if emulate zsh -c "zcompile -U$opt -- ${(q)files[1]}"; then
        print -Pr -- "${(D)files[1]} -> %F{green}$files[1]:t.zwc%f"
      else
        ret=1
        zf_rm -f -- $files[1].zwc
      fi
    fi
  } always {
    [[ -f $files[1].zwc ]] &&
        ..znap.chmod 640 $files[1].zwc
    shift files
  }
done
return ret
